<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.cogather.memberstudy.model.MemberStudyDAO">
<!-- // 스터디그룹id를 통해 특정 스터디그룹과 연관된 memberstudy 항목을 가져오는 쿼리 -->
<select id="selectBySGId" resultType="com.project.cogather.memberstudy.model.MemberStudyDTO">
	SELECT ID id, SG_ID sg_id, ACCTIME acctime, CURTIME curtime, G_AUTH g_auth, ATT_DATE att_date, ENTIME entime, ENSTATUS enstatus
	FROM MEMBERSTUDY
	WHERE SG_ID = #{sg_id} and (g_auth = 'captain' or g_auth = 'crew') and ENSTATUS = 'in'
</select>
<!-- 스터디그룹id를 통해 특정 스터디그룹과 연관된 members 항목을 가져오는 쿼리 -->
<select id="selectMemberBySGId" resultType="com.project.cogather.members.model.MembersDTO">
	SELECT m.ID id ,m.EMAIL email, m.NAME name, m.PIMG_URL pimg_url, m.TAG tag 
	FROM MEMBERSTUDY ms JOIN MEMBERS m ON ms.ID = m.ID 
	WHERE SG_ID = #{sg_id} and (g_auth = 'captain' or g_auth = 'crew') and ENSTATUS = 'in'
</select>
<!-- // 스터디그룹id를 통해 특정 스터디그룹과 연관된 memberstudy 항목 중 권한이 captain인 항목을 가져오는 쿼리 -->
<select id="selectCaptainBySGId" resultType="com.project.cogather.memberstudy.model.MemberStudyDTO">
	SELECT ID id, SG_ID sg_id, ACCTIME acctime, CURTIME curtime, G_AUTH g_auth, ATT_DATE att_date
	FROM MEMBERSTUDY
	WHERE SG_ID = #{sg_id} and g_auth = 'captain'
</select>
<!-- // 스터디그룹id를 통해 특정 스터디그룹과 연관된 memberstudy 항목 중 권한이 crew인 항목을 가져오는 쿼리 -->
<select id="selectCrewBySGId" resultType="com.project.cogather.memberstudy.model.MemberStudyDTO">
	SELECT ID id, SG_ID sg_id, ACCTIME acctime, CURTIME curtime, G_AUTH g_auth, ATT_DATE att_date
	FROM MEMBERSTUDY
	WHERE SG_ID = #{sg_id} and g_auth = 'crew'
</select>
<!-- // 스터디그룹id를 통해 특정 스터디그룹과 연관된 memberstudy 항목 중 권한이 common인 항목을 가져오는 쿼리 -->
<select id="selectCommonBySGId" resultType="com.project.cogather.memberstudy.model.MemberStudyDTO">
	SELECT ID id, SG_ID sg_id, ACCTIME acctime, CURTIME curtime, G_AUTH g_auth, ATT_DATE att_date
	FROM MEMBERSTUDY
	WHERE SG_ID = #{sg_id} and g_auth = 'common'
</select>


<!-- // 방 입장 상태로 변경 -->
<update id="enterEnstatus" flushCache="true">
	UPDATE MEMBERSTUDY SET ENSTATUS = 'in', ENTIME = SYSDATE 
	WHERE SG_ID = #{param1} AND ID = #{param2} AND (G_AUTH = 'crew' OR G_AUTH = 'captain')
</update>
<!-- // 방 퇴실 상태로 변경 -->
<update id="outEnstatus" flushCache="true">
	UPDATE MEMBERSTUDY SET ENSTATUS = 'out', ENTIME = SYSDATE 
	WHERE SG_ID = #{param1} AND ID = #{param2} AND (G_AUTH = 'crew' OR G_AUTH = 'captain')
</update>

<!-- 누적시간 가져오기 -->
<select id="getAcctime" resultType="com.project.cogather.memberstudy.model.MemberStudyDTO">
SELECT ID id, SG_ID sg_id, ACCTIME
FROM MEMBERSTUDY
WHERE SG_ID = #{param1} AND ID = #{param2} AND (g_auth = 'captain' or g_auth = 'crew')
</select>

<!-- 누적시간 업데이트 -->
<update id="updateAcctime" flushCache="true">
UPDATE MEMBERSTUDY SET ACCTIME = #{param3} 
WHERE SG_ID = #{param1} and ID = #{param2} AND (g_auth = 'captain' or g_auth = 'crew')
</update>
<!-- 캡틴 만들기-->
<insert id="createCaptain" flushCache="true" keyProperty="sg_id" useGeneratedKeys="true" keyColumn="sg_id">
	INSERT INTO memberstudy (ID, sg_id, g_auth)
	VALUES 
	(#{id}, #{sg_id}, 'captain')
</insert>
<!-- Common -->
<insert id="createCommon" flushCache="true">
	INSERT INTO memberstudy (ID, sg_id, g_auth)
	VALUES 
	(#{id}, #{sg_id}, 'common')
</insert>

<insert id="updateCrew" flushCache="true">
	UPDATE  memberstudy 
	SET  
	g_auth='crew'
	WHERE sg_id=#{sg_id} AND id=#{id}
</insert>


<!-- public List<MemberStudyDTO> selectRegister(int sg_id); -->
<select id="selectRegister" resultType="com.project.cogather.memberstudy.model.MemberStudyDTO">
	SELECT ID id, SG_ID sg_id, ACCTIME acctime, CURTIME curtime, G_AUTH g_auth, ATT_DATE att_date
	FROM MEMBERSTUDY
	WHERE SG_ID = #{sg_id} and (g_auth = 'crew' or g_auth='captain')

</select>

<select id="selectCommonMemberBySGId" resultType="com.project.cogather.members.model.MembersDTO">
	SELECT m.ID id ,m.EMAIL email, m.NAME name, m.PIMG_URL pimg_url, m.TAG tag 
	FROM MEMBERSTUDY ms JOIN MEMBERS m ON ms.ID = m.ID 
	WHERE SG_ID = #{sg_id} and (g_auth = 'common')
</select>

<select id="selectRegisterMemberBySGId" resultType="com.project.cogather.members.model.MembersDTO">
	SELECT m.ID id ,m.EMAIL email, m.NAME name, m.PIMG_URL pimg_url, m.TAG tag 
	FROM MEMBERSTUDY ms JOIN MEMBERS m ON ms.ID = m.ID 
	WHERE SG_ID = #{sg_id} and (g_auth = 'captain' or g_auth = 'crew')
</select>

<select id="getMemberStudyByID" resultType="com.project.cogather.memberstudy.model.MemberStudyDTO">
	SELECT *
	FROM MEMBERSTUDY
	WHERE id = #{id}
	ORDER BY sg_id DESC
</select>
</mapper>