<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/CSS/**" location="/CSS/" />
	<resources mapping="/JS/**" location="/JS/" />
	<resources mapping="/img/**" location="/img/" />
	<resources mapping="/font/**" location="/font/" />
	<resources mapping="/boardupload/**" location="/boardupload/" />

	<resources mapping="/templates/**" location="/templates/" />
	<resources mapping="/pimgupload/**" location="/pimgupload/" />

	<!-- 프로퍼티 파일 읽어오기 -->
	<context:property-placeholder location="classpath:config/*"/>


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.project.cogather" />
	<beans:bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
	
	
	
	<!-- JdbcTemplate -->
	

	
	<beans:bean name="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>

		<!-- Transaction -->
	<beans:bean name="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<beans:bean name="transactionTemplate" 
			class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager"/>

	</beans:bean>
	

	<!-- MyBatis 설정 -->
	<beans:bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="mapperLocations">
			<beans:list>
				<beans:value>classpath:mapper/**/*.xml</beans:value>
				<beans:value>classpath:com/project/cogather/**/*.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- json 데이터를 특정 클래스 데이터로 변환하기 위한 bean -->
	<beans:bean name="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"></beans:bean>


</beans:beans>
